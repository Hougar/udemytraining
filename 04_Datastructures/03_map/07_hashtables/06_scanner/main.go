package main

import (
	"bufio"
	"fmt"
	"os"
	"strings"
)

func main() {

	const input = "It is not the critic who counts; not the man who points out how the strong man stumbles, or where the doer of deeds could have done them better. The credit belongs to the man who is actually in the arena, whose face is marred by dust and sweat and blood; who strives valiantly; who errs, who comes short again and again, because there is no effort without error and shortcoming; but who does actually strive to do the deeds; who knows great enthusiasms, the great devotions; who spends himself in a worthy cause; who at the best knows in the end the triumph of high achievement, and who at the worst, if he fails, at least fails while daring greatly, so that his place shall never be with those cold and timid souls who neither know victory nor defeat. "

	scanner := bufio.NewScanner(strings.NewReader(input))
	// Made a string a const variable named input teddy rosevalt quote
	// An artificial input source
	// input - the teddy quote
	// bufio.Newscanner - takes a reader
	// strings.Newreader - takes a a string and returns a reader ( wrapping the string with NewReader)
	// strings.Newreader(input) = a reader so NewScanner can now run since it has the proper input
	// NewScanner - takes a reader and returns a pointer to the scanner
	scanner.Split(bufio.ScanWords)
	// set the split function for the scanning operations
	// when you have a pointer to the scanner can do a scanner.Split
	// pass in bufio.ScanWords - gives you words
	for scanner.Scan() {
		// scaner.SCan looping over scanner and Scan returns a Bool
		// the input got put into a buffer
		// the read head is right before every word and runs scan loop after every words - is more more stuff to scan? True continue loop!
		fmt.Println(scanner.Text())
		// count the words
		// Text returns the most recent token generated by a call to Scan as a newly allocated string holding its bytes
		// Token = the next string you want to come back
	}

	if err := scanner.Err(); err != nil {
		fmt.Fprintln(os.Stderr, "reading input", err)
		// if there is an error do this
	}
}

// This function seperates all the words and prints them individually
